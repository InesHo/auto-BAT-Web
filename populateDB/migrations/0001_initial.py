# Generated by Django 3.2.8 on 2022-12-19 09:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisFiles',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_path', models.TextField(max_length=500, unique=True)),
                ('file_type', models.CharField(blank=True, choices=[('PNG', 'PNG'), ('PDF', 'PDF'), ('Excel', 'Excel')], max_length=120, null=True)),
                ('analysisMarker_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnalysisMarkers',
            fields=[
                ('analysisMarker_id', models.AutoField(primary_key=True, serialize=False)),
                ('chosen_z1', models.CharField(blank=True, max_length=20, null=True)),
                ('chosen_y1', models.CharField(blank=True, max_length=20, null=True)),
                ('chosen_z2', models.CharField(blank=True, max_length=20, null=True)),
                ('analysis_date', models.DateField(blank=True, null=True)),
                ('analysis_start_time', models.TimeField(blank=True, null=True)),
                ('analysis_end_time', models.TimeField(blank=True, null=True)),
                ('analysis_status', models.CharField(blank=True, choices=[('Waitting', 'Waitting'), ('In Progress', 'In Progress'), ('Ready', 'Ready')], max_length=120, null=True)),
                ('analysis_type', models.CharField(blank=True, choices=[('Auto Bat', 'Auto Grat'), ('Auto Grat', 'Auto Grat')], max_length=120, null=True)),
                ('analysis_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnalysisResults',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('redQ4', models.CharField(blank=True, max_length=20, null=True)),
                ('result', models.CharField(blank=True, max_length=20, null=True)),
                ('blackQ2', models.CharField(blank=True, max_length=20, null=True)),
                ('blackQ3', models.CharField(blank=True, max_length=20, null=True)),
                ('blackQ4', models.CharField(blank=True, max_length=20, null=True)),
                ('zmeanQ4', models.CharField(blank=True, max_length=20, null=True)),
                ('CD63min', models.CharField(blank=True, max_length=20, null=True)),
                ('CD63max', models.CharField(blank=True, max_length=20, null=True)),
                ('msiCCR3', models.CharField(blank=True, max_length=20, null=True)),
                ('cellQ4', models.CharField(blank=True, max_length=20, null=True)),
                ('responder', models.CharField(blank=True, max_length=20, null=True)),
                ('analysisMarker_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Channels',
            fields=[
                ('channel_id', models.AutoField(primary_key=True, serialize=False)),
                ('pnn', models.CharField(blank=True, max_length=50)),
                ('pns', models.CharField(blank=True, max_length=50)),
                ('analysis_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=150, unique=True)),
                ('department_email', models.EmailField(blank=True, max_length=254)),
                ('department_phoneNumber', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('device_id', models.AutoField(primary_key=True, serialize=False)),
                ('device_label', models.CharField(max_length=100, unique=True)),
                ('device_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('donor_id', models.AutoField(primary_key=True, serialize=False)),
                ('donor_abbr', models.CharField(max_length=10, unique=True)),
                ('desensitization_note', models.CharField(blank=True, max_length=255)),
                ('desensitization_allergen', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ExperimentFiles',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.TextField(blank=True)),
                ('file', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('analysis_id', models.CharField(blank=True, max_length=20, null=True)),
                ('allergen', models.CharField(blank=True, max_length=50, null=True)),
                ('control', models.CharField(blank=True, choices=[('Negative control', 'Negative control'), ('Primary Positive control', 'Primary Positive control'), ('Secondary Positive control', 'Secondary Positive control'), ('Allergen', 'Allergen')], max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilesPlots',
            fields=[
                ('plot_id', models.AutoField(primary_key=True, serialize=False)),
                ('plot_path', models.TextField(max_length=500, unique=True)),
                ('file_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institutes',
            fields=[
                ('institute_id', models.AutoField(primary_key=True, serialize=False)),
                ('institute_shortName', models.CharField(max_length=15, unique=True)),
                ('institute_name', models.CharField(blank=True, max_length=150)),
                ('institute_address', models.CharField(blank=True, max_length=150)),
                ('institute_email', models.EmailField(blank=True, max_length=254)),
                ('institute_phoneNumber', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MeanRawData',
            fields=[
                ('row_id', models.AutoField(primary_key=True, serialize=False)),
                ('labels', models.CharField(blank=True, max_length=200, null=True)),
                ('values', models.CharField(blank=True, max_length=200, null=True)),
                ('file_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('labels', models.CharField(blank=True, max_length=200)),
                ('values', models.CharField(blank=True, max_length=200, null=True)),
                ('file_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Panels',
            fields=[
                ('panel_id', models.AutoField(primary_key=True, serialize=False)),
                ('panel_name', models.CharField(max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Experimenters',
            fields=[
                ('experimenter_id', models.AutoField(primary_key=True, serialize=False)),
                ('experimenter_label', models.CharField(max_length=10, unique=True)),
                ('experimenter_firstName', models.CharField(blank=True, max_length=100)),
                ('experimenter_lastName', models.CharField(blank=True, max_length=100)),
                ('experimenter_email', models.EmailField(blank=True, max_length=254)),
                ('experimenter_phoneNumber', models.CharField(blank=True, max_length=20)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.departments')),
                ('institute_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.institutes')),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('bat_id', models.AutoField(primary_key=True, serialize=False)),
                ('bat_name', models.CharField(max_length=150, unique=True)),
                ('date_of_measurement', models.DateField()),
                ('beadExperiment', models.BooleanField()),
                ('specialExperiment', models.BooleanField()),
                ('specialNotes', models.TextField(blank=True, max_length=250, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('device_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='populateDB.devices')),
                ('experimenter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.experimenters')),
                ('institute_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.institutes')),
            ],
        ),
        migrations.AddField(
            model_name='departments',
            name='institute_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.institutes'),
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('analysis_id', models.AutoField(primary_key=True, serialize=False)),
                ('bat_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='populateDB.experiment')),
                ('donor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='populateDB.donor')),
                ('panel_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='populateDB.panels')),
            ],
        ),
        migrations.CreateModel(
            name='AddUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
