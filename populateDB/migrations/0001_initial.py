# Generated by Django 3.2.8 on 2022-05-04 12:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cytometers',
            fields=[
                ('cytometer_id', models.AutoField(primary_key=True, serialize=False)),
                ('cytometername_short', models.CharField(max_length=15, unique=True)),
                ('cytometername_long', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'populateDB_cytometers',
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=150, unique=True)),
                ('department_email', models.EmailField(blank=True, max_length=254)),
                ('department_phoneNumber', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'db_table': 'populateDB_departments',
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('device_id', models.AutoField(primary_key=True, serialize=False)),
                ('device_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'populateDB_devices',
            },
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('donor_id', models.AutoField(primary_key=True, serialize=False)),
                ('donor_abbr', models.CharField(max_length=10, unique=True)),
                ('desensitization_note', models.CharField(blank=True, max_length=255)),
                ('desensitization_allergen', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'populateDB_donors',
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('bat_id', models.AutoField(primary_key=True, serialize=False)),
                ('bat_name', models.CharField(max_length=150, unique=True)),
                ('date_of_measurement', models.DateField()),
                ('beadExperiment', models.BooleanField()),
                ('specialExperiment', models.BooleanField()),
                ('specialNotes', models.TextField(blank=True, max_length=250, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('cytometer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.cytometers')),
                ('device_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.devices')),
            ],
            options={
                'db_table': 'populateDB_experiment',
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'populateDB_fileType',
            },
        ),
        migrations.CreateModel(
            name='Institutes',
            fields=[
                ('institute_id', models.AutoField(primary_key=True, serialize=False)),
                ('institute_shortName', models.CharField(max_length=15, unique=True)),
                ('institute_name', models.CharField(blank=True, max_length=150)),
                ('institute_address', models.CharField(blank=True, max_length=150)),
                ('institute_email', models.EmailField(blank=True, max_length=254)),
                ('institute_phoneNumber', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'db_table': 'populateDB_institutes',
            },
        ),
        migrations.CreateModel(
            name='Markers',
            fields=[
                ('marker_id', models.AutoField(primary_key=True, serialize=False)),
                ('marker_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'populateDB_markers',
            },
        ),
        migrations.CreateModel(
            name='Panels',
            fields=[
                ('panel_id', models.AutoField(primary_key=True, serialize=False)),
                ('panel_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'populateDB_panels',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserRegistrationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExperimentFiles',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=50)),
                ('image', models.FileField(upload_to='')),
                ('bat_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='populateDB.experiment')),
                ('donor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='populateDB.donor')),
                ('panel_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='populateDB.panels')),
                ('type_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='populateDB.filetype')),
            ],
            options={
                'db_table': 'populateDB_experimentFiles',
            },
        ),
        migrations.CreateModel(
            name='Experimenters',
            fields=[
                ('experimenter_id', models.AutoField(primary_key=True, serialize=False)),
                ('experimenter_label', models.CharField(max_length=10, unique=True)),
                ('experimenter_firstName', models.CharField(blank=True, max_length=100)),
                ('experimenter_lastName', models.CharField(blank=True, max_length=100)),
                ('experimenter_email', models.EmailField(blank=True, max_length=254)),
                ('experimenter_phoneNumber', models.CharField(blank=True, max_length=20)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.departments')),
                ('institute_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.institutes')),
            ],
            options={
                'db_table': 'populateDB_experimenters',
            },
        ),
        migrations.AddField(
            model_name='experiment',
            name='experimenter_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.experimenters'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='institute_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.institutes'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='marker_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.markers'),
        ),
        migrations.AddField(
            model_name='departments',
            name='institute_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='populateDB.institutes'),
        ),
    ]
